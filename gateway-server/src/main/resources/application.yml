server:
  port: 8072

spring:
  #Rate Limited Request Start
  data:
    redis:
      connect-timeout: 2s
      host: localhost
      port: 6379
      timeout: 1s
  #Rate Limited Request End
  application:
    name: gateway-server
  config:
    import: optional:configserver:http://localhost:8071/
  cloud:
    gateway:
      discovery:
        locator:
          enabled: false
          lower-case-service-id: true
      httpclient:
        connect-timeout: 1000 #waiting request from gateway to service. If request connects to service over 1s, request will be timeout
        response-timeout: 2s #maximum time gateway is going to wait to receive the response from the microservice

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    gateway:
      enabled: true
  info:
    env:
      enabled: true

eureka:
  instance:
    prefer-ip-address: true
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8070/eureka/

info:
  app:
    name: "gateway-server"
    description: "D-Corp Bank Gateway Application"
    version: "1.0.0"

logging:
  level:
    com:
      dcorp:
        hightech:
          gatewayserver: DEBUG

resilience4j:
  circuitbreaker:
    configs:
      default:
        sliding-window-size: 10 #Monitor 10 request coming, after ten request, you can take the decision whether to continue with the close or open status
        permitted-number-of-calls-in-half-open-state: 2 #allow amount of request when service in HALF OPEN status
        failure-rate-threshold: 50 #Mean 50%, when at least 50% request are failed, service will switch to OPEN state from CLOSED state
        wait-duration-in-open-state: 10000 #Mean 10 000 milliseconds = 10s, after 10s, service will switch to HALF OPEN state from OPEN state

